2025-08-11 00:03:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:03:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:03:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:03:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:03:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:03:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:03:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:10:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:20:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:20:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:20:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:23:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:23:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:23:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:24:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:24:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:24:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:24:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:24:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:24:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:24:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:24:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:24:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:24:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:24:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:24:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:31:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:31:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:31:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:31:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:31:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:31:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:32:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:32:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:32:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:41:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:45:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:45:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:45:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:45:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:45:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:45:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:45:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:45:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:45:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:45:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:45:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:45:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:45:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:45:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:45:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:51:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:51:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:51:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:51:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:51:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:51:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:51:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:51:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:51:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:51:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:51:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:51:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 00:51:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 00:51:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 00:51:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:20:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? limit ?
2025-08-11 01:20:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone=? limit ?
2025-08-11 01:20:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:20:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.User */insert 
    into
        users (active,address,img,birth_date,created_at,email,facebook_account_id,full_name,google_account_id,password,phone,role_id,updated_at,username) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 01:20:38 [http-nio-8080-exec-6] INFO  com.codegym.service.AuthService - New user registered: reus@gmail.com
2025-08-11 01:20:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:20:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:20:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:20:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:20:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:20:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:20:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:20:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:20:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:26:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 01:26:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 01:26:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 01:27:03 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 19668 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-11 01:27:03 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 01:27:03 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 01:27:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 01:27:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 265 ms. Found 10 JPA repository interfaces.
2025-08-11 01:27:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 01:27:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 01:27:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 01:27:13 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 01:27:13 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 9952 ms
2025-08-11 01:27:14 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 01:27:14 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 01:27:14 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 01:27:14 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 01:27:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 01:27:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 01:27:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d685f4e
2025-08-11 01:27:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 01:27:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 01:27:17 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 01:27:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 01:27:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 01:27:21 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 01:27:21 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 01:27:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 01:27:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4be7661, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@349c9bfa, org.springframework.security.web.context.SecurityContextHolderFilter@62db3787, org.springframework.security.web.header.HeaderWriterFilter@1928dc66, org.springframework.web.filter.CorsFilter@1479c527, org.springframework.security.web.authentication.logout.LogoutFilter@77bca6d6, com.codegym.infrastructure.JwtTokenFilter@2c56e044, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68bbd5c2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@47e2a158, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c55d3ce, org.springframework.security.web.session.SessionManagementFilter@76e51181, org.springframework.security.web.access.ExceptionTranslationFilter@5f45abe6, org.springframework.security.web.access.intercept.AuthorizationFilter@7fa9e773]
2025-08-11 01:27:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 01:27:25 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 23.621 seconds (process running for 26.275)
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:27:26 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:28:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 01:28:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 01:28:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-11 01:28:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:28:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:28:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:28:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:28:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:28:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:28:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:28:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:28:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:28:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:28:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:28:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:28:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:28:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:28:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:38:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:38:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:38:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:40:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:40:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:40:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:40:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:40:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:40:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:40:44 [http-nio-8080-exec-2] WARN  o.s.web.servlet.PageNotFound - Request method 'POST' is not supported
2025-08-11 01:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:42:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:42:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:42:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:43:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:43:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:43:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:43:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 01:43:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:43:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:43:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:43:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 01:43:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-11 01:43:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone=? limit ?
2025-08-11 01:43:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-11 01:44:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:44:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:44:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:44:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:44:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:44:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:44:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:44:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:44:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:44:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:44:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:44:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:44:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:44:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:44:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:49:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 01:53:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone=? limit ?
2025-08-11 01:53:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-11 01:53:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:53:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 01:53:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 01:53:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 01:58:25 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 01:58:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 01:58:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 13:45:41 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 46989 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 13:45:41 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 13:45:41 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 13:45:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 13:45:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 10 JPA repository interfaces.
2025-08-11 13:45:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 13:45:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 13:45:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 13:45:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 13:45:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 738 ms
2025-08-11 13:45:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 13:45:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 13:45:42 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 13:45:42 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 13:45:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 13:45:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 13:45:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@42401b81
2025-08-11 13:45:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 13:45:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 13:45:42 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 13:45:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 13:45:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 13:45:43 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 13:45:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 13:45:44 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 13:45:44 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@9e2946, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@283eb984, org.springframework.security.web.context.SecurityContextHolderFilter@de4bee9, org.springframework.security.web.header.HeaderWriterFilter@c1e7bea, org.springframework.web.filter.CorsFilter@4913465d, org.springframework.security.web.authentication.logout.LogoutFilter@3beee525, com.codegym.infrastructure.JwtTokenFilter@7a0f1f9d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@400c0d26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75351aec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4aebd384, org.springframework.security.web.session.SessionManagementFilter@43e587cd, org.springframework.security.web.access.ExceptionTranslationFilter@13e9a2f2, org.springframework.security.web.access.intercept.AuthorizationFilter@5e8ec0d9]
2025-08-11 13:45:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 13:45:44 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.899 seconds (process running for 3.175)
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:45:44 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:53:03 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 13:53:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 13:53:03 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-08-11 13:53:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:53:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:53:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:53:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:53:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:53:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:53:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:53:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:53:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:53:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:53:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:53:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 13:55:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:55:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:59 [http-nio-8080-exec-1] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-11 lúc 10.04.26.png -> http://localhost:8080/api/files/avatar/e8da5259-c6ff-467a-ba54-64757a3912bc.png
2025-08-11 13:56:59 [http-nio-8080-exec-1] ERROR c.c.exception.GlobalExceptionHandler - An unexpected error occurred
org.springframework.context.NoSuchMessageException: No message found under code 'success.file.upload' for locale 'vi_VN'.
	at org.springframework.context.support.AbstractMessageSource.getMessage(AbstractMessageSource.java:161)
	at com.codegym.dto.ApiResponse.success(ApiResponse.java:45)
	at com.codegym.controller.api.FileUploadController.uploadAvatar(FileUploadController.java:180)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.codegym.infrastructure.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:79)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 13:56:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:56:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:56:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:56:59 [http-nio-8080-exec-6] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-11 lúc 10.04.26.png -> http://localhost:8080/api/files/avatar/13880e94-9442-428b-94f5-1204e3837bd3.png
2025-08-11 13:56:59 [http-nio-8080-exec-6] ERROR c.c.exception.GlobalExceptionHandler - An unexpected error occurred
org.springframework.context.NoSuchMessageException: No message found under code 'success.file.upload' for locale 'vi_VN'.
	at org.springframework.context.support.AbstractMessageSource.getMessage(AbstractMessageSource.java:161)
	at com.codegym.dto.ApiResponse.success(ApiResponse.java:45)
	at com.codegym.controller.api.FileUploadController.uploadFile(FileUploadController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.codegym.infrastructure.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:79)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 13:57:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:57:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:57:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:57:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:57:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:57:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:57:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:57:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:57:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:57:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:57:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:57:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:57:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:57:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:57:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:57:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:57:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:57:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? limit ?
2025-08-11 13:58:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone=? limit ?
2025-08-11 13:58:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 13:58:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.User */insert 
    into
        users (active,address,img,birth_date,created_at,email,facebook_account_id,full_name,google_account_id,password,phone,role_id,updated_at,username) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 13:58:38 [http-nio-8080-exec-10] INFO  com.codegym.service.AuthService - New user registered: haianh@gmail.com
2025-08-11 13:58:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:58:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:58:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:58:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:59:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:59:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 13:59:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 14:00:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-11 14:00:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:00:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:00:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:00:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:01:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:01:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:01:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:02:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:07:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:07:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:07:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:07:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:07:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:07:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:07:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:07:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:07:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:07:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:07:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:07:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:11:18 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:11:18 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:11:18 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:27:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:27:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:27:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:27:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:27:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:27:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:27:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:27:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:27:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:27:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:27:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:27:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:27:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:27:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:27:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:27:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:27:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:27:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:30:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 14:30:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 14:30:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 14:36:10 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 51304 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 14:36:10 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 14:36:10 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 14:36:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 14:36:10 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 10 JPA repository interfaces.
2025-08-11 14:36:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 14:36:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 14:36:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 14:36:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 14:36:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 698 ms
2025-08-11 14:36:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 14:36:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 14:36:11 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 14:36:11 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 14:36:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 14:36:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 14:36:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e090aaa
2025-08-11 14:36:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 14:36:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 14:36:11 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 14:36:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 14:36:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 14:36:12 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 14:36:12 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 14:36:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 14:36:13 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1edad178, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71c1ba6d, org.springframework.security.web.context.SecurityContextHolderFilter@1ff9d66b, org.springframework.security.web.header.HeaderWriterFilter@41b6ae51, org.springframework.web.filter.CorsFilter@50f6eb17, org.springframework.security.web.authentication.logout.LogoutFilter@7c057419, com.codegym.infrastructure.JwtTokenFilter@61e4a072, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21e441d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@342cc706, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bc3e36b, org.springframework.security.web.session.SessionManagementFilter@72bd8702, org.springframework.security.web.access.ExceptionTranslationFilter@890196b, org.springframework.security.web.access.intercept.AuthorizationFilter@7b128cd2]
2025-08-11 14:36:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 14:36:13 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.871 seconds (process running for 3.178)
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:13 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 14:36:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 14:36:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 14:36:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:36:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 14:36:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:03:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:03:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 15:03:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 15:03:14 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 51739 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 15:03:14 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 15:03:14 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 15:03:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 15:03:14 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 10 JPA repository interfaces.
2025-08-11 15:03:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 15:03:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 15:03:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 15:03:15 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 15:03:15 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 684 ms
2025-08-11 15:03:15 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 15:03:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 15:03:15 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 15:03:15 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 15:03:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 15:03:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 15:03:15 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44ddb518
2025-08-11 15:03:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 15:03:15 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 15:03:15 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 15:03:16 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 15:03:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 15:03:16 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 15:03:16 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 15:03:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 15:03:16 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@260f8704, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ea01c2a, org.springframework.security.web.context.SecurityContextHolderFilter@4518bffd, org.springframework.security.web.header.HeaderWriterFilter@1752ab9b, org.springframework.web.filter.CorsFilter@7ec02149, org.springframework.security.web.authentication.logout.LogoutFilter@45bf1ee3, com.codegym.infrastructure.JwtTokenFilter@3507200d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e6bfd2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b9be679, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2afdab87, org.springframework.security.web.session.SessionManagementFilter@5a1f4fa4, org.springframework.security.web.access.ExceptionTranslationFilter@4ca62855, org.springframework.security.web.access.intercept.AuthorizationFilter@7fc2e0b7]
2025-08-11 15:03:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 15:03:17 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.774 seconds (process running for 3.014)
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:03:17 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:27 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 15:07:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 15:07:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-08-11 15:07:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:07:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:07:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:08:49 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m33s934ms).
2025-08-11 15:15:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:15:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:15:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:15:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:27 [http-nio-8080-exec-9] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-11 lúc 09.32.35.png -> http://localhost:8080/api/files/avatar/c77f0e19-1530-4a9e-bdae-4a0ee0c4a115.png
2025-08-11 15:16:27 [http-nio-8080-exec-9] ERROR c.c.exception.GlobalExceptionHandler - An unexpected error occurred
org.springframework.context.NoSuchMessageException: No message found under code 'success.file.upload' for locale 'vi_VN'.
	at org.springframework.context.support.AbstractMessageSource.getMessage(AbstractMessageSource.java:161)
	at com.codegym.dto.ApiResponse.success(ApiResponse.java:45)
	at com.codegym.controller.api.FileUploadController.uploadAvatar(FileUploadController.java:180)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.codegym.infrastructure.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:79)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:27 [http-nio-8080-exec-5] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-11 lúc 09.32.35.png -> http://localhost:8080/api/files/avatar/800dee15-1cff-48dd-bb3c-ba159e529ba3.png
2025-08-11 15:16:27 [http-nio-8080-exec-5] ERROR c.c.exception.GlobalExceptionHandler - An unexpected error occurred
org.springframework.context.NoSuchMessageException: No message found under code 'success.file.upload' for locale 'vi_VN'.
	at org.springframework.context.support.AbstractMessageSource.getMessage(AbstractMessageSource.java:161)
	at com.codegym.dto.ApiResponse.success(ApiResponse.java:45)
	at com.codegym.controller.api.FileUploadController.uploadFile(FileUploadController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.codegym.infrastructure.JwtTokenFilter.doFilterInternal(JwtTokenFilter.java:79)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-08-11 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:16:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:16:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:16:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:17:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:17:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:17:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:18:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:20:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 15:20:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 15:20:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 15:20:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 15:20:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:23:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:28:24 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m34s462ms).
2025-08-11 16:44:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 16:44:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 16:44:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:16:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:18:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 17:57:46 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=38m20s964ms).
2025-08-11 18:51:04 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=53m18s728ms).
2025-08-11 20:05:52 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h14m47s306ms).
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:05:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:14:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:14:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 20:14:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 20:18:46 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54268 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 20:18:46 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 20:18:46 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 20:18:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 20:18:47 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 10 JPA repository interfaces.
2025-08-11 20:18:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 20:18:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 20:18:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 20:18:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 20:18:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1125 ms
2025-08-11 20:18:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 20:18:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 20:18:47 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 20:18:48 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:18:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 20:18:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 20:18:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@445058e8
2025-08-11 20:18:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 20:18:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 20:18:48 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:18:49 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 20:18:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:18:49 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 20:18:49 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 20:18:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 20:18:49 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1bae8e5e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@352bccf, org.springframework.security.web.context.SecurityContextHolderFilter@74cf0dd9, org.springframework.security.web.header.HeaderWriterFilter@412b4aed, org.springframework.web.filter.CorsFilter@70d3e710, org.springframework.security.web.authentication.logout.LogoutFilter@5a1f4fa4, com.codegym.infrastructure.JwtTokenFilter@162a5c4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f2c0470, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35283b74, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@732d2b59, org.springframework.security.web.session.SessionManagementFilter@56e32a23, org.springframework.security.web.access.ExceptionTranslationFilter@1c68601b, org.springframework.security.web.access.intercept.AuthorizationFilter@768dcd21]
2025-08-11 20:18:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 20:18:50 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.755 seconds (process running for 4.042)
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:18:50 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:02 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 20:19:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 20:19:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 20:19:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:19:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:19:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:19:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:19:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:19:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:19:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:20:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:20:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:20:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:20:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:20:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:20:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:27:55 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:27:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 20:27:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 20:27:57 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54470 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 20:27:57 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 20:27:57 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 20:27:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 20:27:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 10 JPA repository interfaces.
2025-08-11 20:27:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 20:27:58 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 20:27:58 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 20:27:58 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 20:27:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 684 ms
2025-08-11 20:27:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 20:27:58 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 20:27:58 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 20:27:58 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:27:58 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 20:27:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 20:27:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40a28bda
2025-08-11 20:27:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 20:27:58 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 20:27:59 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:27:59 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 20:27:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:27:59 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 20:27:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 20:28:00 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 20:28:00 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@55f2e76a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b8f0b64, org.springframework.security.web.context.SecurityContextHolderFilter@732d2b59, org.springframework.security.web.header.HeaderWriterFilter@6291d30, org.springframework.web.filter.CorsFilter@331d651b, org.springframework.security.web.authentication.logout.LogoutFilter@260f8704, com.codegym.infrastructure.JwtTokenFilter@3fe59f84, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@abce494, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a6ef10b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54a0ada1, org.springframework.security.web.session.SessionManagementFilter@1bae8e5e, org.springframework.security.web.access.ExceptionTranslationFilter@5a1f4fa4, org.springframework.security.web.access.intercept.AuthorizationFilter@462f1d85]
2025-08-11 20:28:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 20:28:00 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.703 seconds (process running for 2.942)
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:28:00 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:28:10 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 20:28:10 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 20:28:10 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 20:28:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:28:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:28:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:28:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:28:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:28:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:27 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:33:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 20:33:27 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 20:33:28 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54523 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 20:33:28 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 20:33:28 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 20:33:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 20:33:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 10 JPA repository interfaces.
2025-08-11 20:33:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 20:33:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 20:33:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 20:33:29 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 20:33:29 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 714 ms
2025-08-11 20:33:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 20:33:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 20:33:29 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 20:33:29 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:33:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 20:33:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 20:33:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1b444b5
2025-08-11 20:33:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 20:33:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 20:33:30 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:33:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 20:33:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:33:30 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 20:33:30 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 20:33:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 20:33:31 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@65b869b4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f55e1b9, org.springframework.security.web.context.SecurityContextHolderFilter@35283b74, org.springframework.security.web.header.HeaderWriterFilter@1cc771ae, org.springframework.web.filter.CorsFilter@171b3f38, org.springframework.security.web.authentication.logout.LogoutFilter@49e8f283, com.codegym.infrastructure.JwtTokenFilter@650a0b50, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52cb399d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a69c4c3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a6ef10b, org.springframework.security.web.session.SessionManagementFilter@992f314, org.springframework.security.web.access.ExceptionTranslationFilter@7d59e235, org.springframework.security.web.access.intercept.AuthorizationFilter@732d2b59]
2025-08-11 20:33:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 20:33:31 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.955 seconds (process running for 3.216)
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:31 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:41 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 20:33:41 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 20:33:41 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 20:33:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:33:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:42:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 20:42:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 20:42:06 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54629 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 20:42:06 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 20:42:06 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 20:42:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 20:42:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 10 JPA repository interfaces.
2025-08-11 20:42:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 20:42:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 20:42:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 20:42:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 20:42:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 771 ms
2025-08-11 20:42:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 20:42:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 20:42:07 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 20:42:07 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:42:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 20:42:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 20:42:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4a105556
2025-08-11 20:42:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 20:42:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 20:42:08 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:42:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 20:42:08 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:42:08 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 20:42:08 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 20:42:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 20:42:09 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ed43328, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23216e17, org.springframework.security.web.context.SecurityContextHolderFilter@3b0305dd, org.springframework.security.web.header.HeaderWriterFilter@a69c4c3, org.springframework.web.filter.CorsFilter@679864e0, org.springframework.security.web.authentication.logout.LogoutFilter@4f72e38c, com.codegym.infrastructure.JwtTokenFilter@6764201e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d015dba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f0a6b04, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@629e9957, org.springframework.security.web.session.SessionManagementFilter@b205e08, org.springframework.security.web.access.ExceptionTranslationFilter@493557d7, org.springframework.security.web.access.intercept.AuthorizationFilter@45bf1ee3]
2025-08-11 20:42:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 20:42:09 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.0 seconds (process running for 3.235)
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:09 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:18 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 20:42:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 20:42:18 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 20:42:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:42:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:42:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:52:55 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:52:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 20:52:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 20:52:57 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54763 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 20:52:57 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 20:52:57 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 20:52:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 20:52:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 10 JPA repository interfaces.
2025-08-11 20:52:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 20:52:58 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 20:52:58 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 20:52:58 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 20:52:58 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 682 ms
2025-08-11 20:52:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 20:52:58 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 20:52:58 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 20:52:58 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:52:58 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 20:52:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 20:52:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24fef542
2025-08-11 20:52:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 20:52:58 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 20:52:58 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:52:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 20:52:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:52:59 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 20:52:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 20:52:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 20:52:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@58a2c6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@260f8704, org.springframework.security.web.context.SecurityContextHolderFilter@6291d30, org.springframework.security.web.header.HeaderWriterFilter@70a7ebc9, org.springframework.web.filter.CorsFilter@4ea01c2a, org.springframework.security.web.authentication.logout.LogoutFilter@48acb864, com.codegym.infrastructure.JwtTokenFilter@28721794, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65daaa95, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7931cea2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ec02149, org.springframework.security.web.session.SessionManagementFilter@677480c8, org.springframework.security.web.access.ExceptionTranslationFilter@10a199e0, org.springframework.security.web.access.intercept.AuthorizationFilter@474c8d42]
2025-08-11 20:53:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 20:53:00 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.836 seconds (process running for 3.074)
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:00 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:53:04 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 20:53:04 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 20:53:04 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:53:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 20:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:53:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:53:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:53:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:53:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:57:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 20:57:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:57:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:57:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:59:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:59:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 20:59:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 20:59:35 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54837 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 20:59:35 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 20:59:35 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 20:59:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 20:59:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 10 JPA repository interfaces.
2025-08-11 20:59:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 20:59:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 20:59:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 20:59:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 20:59:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 672 ms
2025-08-11 20:59:36 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 20:59:36 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 20:59:36 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 20:59:36 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:59:36 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 20:59:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 20:59:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@47ef5a33
2025-08-11 20:59:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 20:59:36 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 20:59:36 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 20:59:36 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 20:59:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 20:59:37 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 20:59:37 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 20:59:37 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 20:59:37 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@16209621, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e9e4332, org.springframework.security.web.context.SecurityContextHolderFilter@68b5a37d, org.springframework.security.web.header.HeaderWriterFilter@2313c291, org.springframework.security.web.csrf.CsrfFilter@5047fc77, org.springframework.security.web.authentication.logout.LogoutFilter@47ce44ab, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@76145ef9, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@45a33515, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4c32d208, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@39c821c6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60c588cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f11fe28, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61df07d0, org.springframework.security.web.access.ExceptionTranslationFilter@5623354e, org.springframework.security.web.access.intercept.AuthorizationFilter@7c8ec235]
2025-08-11 20:59:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 20:59:37 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.787 seconds (process running for 3.019)
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 20:59:37 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 20:59:42 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 20:59:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 20:59:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 21:00:47 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:00:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 21:00:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 21:00:49 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 54867 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 21:00:49 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 21:00:49 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 21:00:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 21:00:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 10 JPA repository interfaces.
2025-08-11 21:00:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 21:00:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 21:00:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 21:00:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 21:00:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 677 ms
2025-08-11 21:00:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 21:00:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 21:00:49 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 21:00:49 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 21:00:49 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 21:00:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 21:00:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@27e21083
2025-08-11 21:00:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 21:00:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 21:00:50 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 21:00:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 21:00:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:00:50 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 21:00:50 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 21:00:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 21:00:51 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3e9f3d0f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41aa99fc, org.springframework.security.web.context.SecurityContextHolderFilter@7931cea2, org.springframework.security.web.header.HeaderWriterFilter@32daccab, org.springframework.web.filter.CorsFilter@6ccb3dd, org.springframework.security.web.authentication.logout.LogoutFilter@679864e0, com.codegym.infrastructure.JwtTokenFilter@d98ce13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45e97963, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bae8e5e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@775e3699, org.springframework.security.web.session.SessionManagementFilter@7e6bfd2, org.springframework.security.web.access.ExceptionTranslationFilter@398f6f04, org.springframework.security.web.access.intercept.AuthorizationFilter@7ec02149]
2025-08-11 21:00:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 21:00:51 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.743 seconds (process running for 2.971)
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:51 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:00:54 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 21:00:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 21:00:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:00:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:00:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:00:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:00:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:03:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:03:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:03:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:03:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:34 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:14:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 21:14:34 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 21:14:36 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 55029 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-11 21:14:36 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-11 21:14:36 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 21:14:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 21:14:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2025-08-11 21:14:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-11 21:14:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 21:14:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-11 21:14:37 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 21:14:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 669 ms
2025-08-11 21:14:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 21:14:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-11 21:14:37 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-11 21:14:37 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 21:14:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 21:14:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 21:14:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35536760
2025-08-11 21:14:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 21:14:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-11 21:14:37 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-11 21:14:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-11 21:14:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:14:38 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-11 21:14:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-11 21:14:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 21:14:39 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7ec02149, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2afdab87, org.springframework.security.web.context.SecurityContextHolderFilter@7e6bfd2, org.springframework.security.web.header.HeaderWriterFilter@76b93bb9, org.springframework.web.filter.CorsFilter@70903e7b, org.springframework.security.web.authentication.logout.LogoutFilter@3396d2a6, com.codegym.infrastructure.JwtTokenFilter@443b9ebb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@490f4b14, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@768dcd21, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e9f3d0f, org.springframework.security.web.session.SessionManagementFilter@6291d30, org.springframework.security.web.access.ExceptionTranslationFilter@1752ab9b, org.springframework.security.web.access.intercept.AuthorizationFilter@58a2c6a]
2025-08-11 21:14:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-11 21:14:39 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.039 seconds (process running for 3.282)
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:39 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:50 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 21:14:50 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 21:14:50 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:14:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:15:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:15:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:15:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:15:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:15:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:15:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:15:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:15:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:15:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:15:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:24:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:24:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:24:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:24:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:24:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:24:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:24:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-11 21:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-11 21:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-11 21:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-11 21:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-11 21:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-11 21:33:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 21:33:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 21:33:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 08:48:27 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 21076 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 08:48:27 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 08:48:27 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 08:48:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 08:48:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 180 ms. Found 10 JPA repository interfaces.
2025-08-12 08:48:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 08:48:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 08:48:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 08:48:34 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 08:48:34 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6585 ms
2025-08-12 08:48:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 08:48:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 08:48:34 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 08:48:34 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 08:48:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 08:48:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 08:48:37 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:231)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:199)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:169)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 08:48:37 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:231)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:199)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:169)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 08:48:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 08:48:37 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 08:48:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 08:48:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 08:48:40 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:284)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 08:48:40 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1045, SQLState: 28000
2025-08-12 08:48:40 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Access denied for user 'root'@'localhost' (using password: YES)
2025-08-12 08:48:40 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
2025-08-12 08:48:40 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtTokenFilter' defined in file [D:\Module-6\rental-house-backend\target\classes\com\codegym\infrastructure\JwtTokenFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityConfig' defined in file [D:\Module-6\rental-house-backend\target\classes\com\codegym\config\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-08-12 08:48:40 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 08:48:40 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-12 08:48:40 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 08:48:40 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtTokenFilter' defined in file [D:\Module-6\rental-house-backend\target\classes\com\codegym\infrastructure\JwtTokenFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityConfig' defined in file [D:\Module-6\rental-house-backend\target\classes\com\codegym\config\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [D:\Module-6\rental-house-backend\target\classes\com\codegym\config\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 77 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 91 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 103 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 110 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:61)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:284)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 135 common frames omitted
2025-08-12 08:49:19 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 2932 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 08:49:19 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 08:49:19 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 08:49:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 08:49:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 205 ms. Found 10 JPA repository interfaces.
2025-08-12 08:49:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 08:49:23 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 08:49:23 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 08:49:23 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 08:49:23 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3931 ms
2025-08-12 08:49:24 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 08:49:24 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 08:49:24 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 08:49:24 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 08:49:24 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 08:49:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 08:49:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e93108a
2025-08-12 08:49:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 08:49:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 08:49:26 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 08:49:28 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 08:49:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 08:49:29 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 08:49:29 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 08:49:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 08:49:32 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@474c8d42, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fc2e0b7, org.springframework.security.web.context.SecurityContextHolderFilter@677480c8, org.springframework.security.web.header.HeaderWriterFilter@77f21c0a, org.springframework.web.filter.CorsFilter@23327c53, org.springframework.security.web.authentication.logout.LogoutFilter@3057a923, com.codegym.infrastructure.JwtTokenFilter@2fb24ad8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a271f3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e6bfd2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58a2c6a, org.springframework.security.web.session.SessionManagementFilter@6c3a3d87, org.springframework.security.web.access.ExceptionTranslationFilter@1159a049, org.springframework.security.web.access.intercept.AuthorizationFilter@5decbb5f]
2025-08-12 08:49:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 08:49:32 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 14.078 seconds (process running for 15.624)
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:33 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:47 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 08:49:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 08:49:47 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2025-08-12 08:49:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:49:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:49:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 08:49:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 08:49:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 08:49:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:49:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:49:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:49:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 08:49:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 08:49:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 08:50:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:50:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 08:58:33 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 08:58:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 08:58:33 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 09:06:23 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 1984 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 09:06:23 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 09:06:23 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 09:06:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 09:06:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184 ms. Found 10 JPA repository interfaces.
2025-08-12 09:06:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 09:06:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 09:06:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 09:06:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 09:06:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 9995 ms
2025-08-12 09:06:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 09:06:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 09:06:33 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 09:06:34 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 09:06:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 09:06:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 09:06:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d685f4e
2025-08-12 09:06:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 09:06:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 09:06:36 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 09:06:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 09:06:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 09:06:39 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 09:06:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 09:06:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 09:06:41 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6068e9d9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@681285ec, org.springframework.security.web.context.SecurityContextHolderFilter@741d2dda, org.springframework.security.web.header.HeaderWriterFilter@37a522c8, org.springframework.web.filter.CorsFilter@75ad8ca8, org.springframework.security.web.authentication.logout.LogoutFilter@7aafaf44, com.codegym.infrastructure.JwtTokenFilter@f776b4a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20b1f874, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@633332e2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@201a6b7d, org.springframework.security.web.session.SessionManagementFilter@626e3b18, org.springframework.security.web.access.ExceptionTranslationFilter@27cd156a, org.springframework.security.web.access.intercept.AuthorizationFilter@1263422a]
2025-08-12 09:06:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 09:06:42 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 20.167 seconds (process running for 24.808)
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:06:42 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:08:31 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 09:08:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 09:08:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 09:25:41 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 10852 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 09:25:41 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 09:25:41 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 09:25:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 09:25:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 236 ms. Found 10 JPA repository interfaces.
2025-08-12 09:25:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 09:25:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 09:25:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 09:25:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 09:25:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5389 ms
2025-08-12 09:25:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 09:25:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 09:25:47 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 09:25:47 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 09:25:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 09:25:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 09:25:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22ae32ba
2025-08-12 09:25:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 09:25:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 09:25:50 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 09:25:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 09:25:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 09:25:54 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 09:25:54 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 09:25:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 09:25:59 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@43493a5d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21df2968, org.springframework.security.web.context.SecurityContextHolderFilter@2927d781, org.springframework.security.web.header.HeaderWriterFilter@40c31127, org.springframework.web.filter.CorsFilter@1c7094eb, org.springframework.security.web.authentication.logout.LogoutFilter@351623d, com.codegym.infrastructure.JwtTokenFilter@16718e1b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@411db18d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@28e9f6b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70fdecff, org.springframework.security.web.session.SessionManagementFilter@70a8d2e1, org.springframework.security.web.access.ExceptionTranslationFilter@251e00a0, org.springframework.security.web.access.intercept.AuthorizationFilter@dcdf733]
2025-08-12 09:26:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 09:26:00 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 20.439 seconds (process running for 22.798)
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:26:00 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:21 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 09:27:21 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 09:27:21 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-08-12 09:27:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:27:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 09:35:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:35:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:35:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:35:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:35:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 09:40:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:40:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:40:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:40:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:40:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:40:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:55 [http-nio-8080-exec-4] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: anh1.jpg -> http://localhost:8080/api/files/proof-of-ownership/670e9022-ffe7-427c-89dd-58af77ced080.jpg
2025-08-12 09:43:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:43:56 [http-nio-8080-exec-9] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: law1.jpg -> http://localhost:8080/api/files/proof-of-ownership/e93af64f-5f78-4872-a62b-547ac86a5642.jpg
2025-08-12 09:43:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:43:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:43:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:45:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:45:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:45:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:45:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:45:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:45:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:45:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:45:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:45:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:45:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:45:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:45:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:46:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:46:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:46:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:46:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:46:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:46:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:13 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:48:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:48:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:48:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:52:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:52:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:52:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 09:53:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 09:53:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 09:53:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:01:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:01:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:01:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:01:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:01:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:01:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:01:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:01:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:01:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:01:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:01:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:01:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:01:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:01:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:01:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:01:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:01:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:01:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:45 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:09:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:10:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:10:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:17 [http-nio-8080-exec-9] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: anh2.jpg -> http://localhost:8080/api/files/proof-of-ownership/0a1952c1-fa33-4a43-8328-72b9f6065d62.jpg
2025-08-12 10:10:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:10:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:10:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:17 [http-nio-8080-exec-3] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro.jpg -> http://localhost:8080/api/files/proof-of-ownership/2ca7821b-76b4-40db-a6c8-73d9cfc884c3.jpg
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HouseRenter x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            house_renters h1_0 
        where
            h1_0.id=?
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=? 
        and h1_0.status=? limit ?
2025-08-12 10:10:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.HouseRenterRequest */insert 
    into
        house_renter_requests (processed_date,reason,request_date,status,user_id) 
    values
        (?,?,?,?,?)
2025-08-12 10:10:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:10:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:10:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:10:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:10:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:10:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:10:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:10:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:10:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:10:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:10:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:11:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:11:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:11:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:11:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HouseRenter x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            house_renters h1_0 
        where
            h1_0.id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.HouseRenter */insert 
    into
        house_renters (address,approved_date,created_at,national_id,proof_of_ownership_url,updated_at,user_id) 
    values
        (?,?,?,?,?,?,?)
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.HouseRenterRequest */update house_renter_requests 
    set
        processed_date=?,
        reason=?,
        request_date=?,
        status=?,
        user_id=? 
    where
        id=?
2025-08-12 10:11:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:11:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:11:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:11:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:11:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 10:12:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 10:12:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 10:12:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 10:12:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:12:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:12:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:12:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:12:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:12:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:13:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:15:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:15:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:15:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:23:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:23:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:23:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:23:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:23:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:23:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:23:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:23:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:23:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:23:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:23:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:23:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:23:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:23:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:23:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:23:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:25:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:25:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:25:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:25:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:25:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:25:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:26:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:26:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:26:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:26:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:26:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:26:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:00 [http-nio-8080-exec-6] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro.jpg -> http://localhost:8080/api/files/proof-of-ownership/4d74f45c-0587-42f1-a177-1d5055b50059.jpg
2025-08-12 10:27:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:00 [http-nio-8080-exec-10] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro2.jpg -> http://localhost:8080/api/files/proof-of-ownership/d69cf246-d81e-4682-a61e-b3cf6314c486.jpg
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HouseRenter x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            house_renters h1_0 
        where
            h1_0.id=?
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id 
    from
        house_renter_requests h1_0 
    where
        h1_0.user_id=? 
        and h1_0.status=? limit ?
2025-08-12 10:27:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.HouseRenterRequest */insert 
    into
        house_renter_requests (processed_date,reason,request_date,status,user_id) 
    values
        (?,?,?,?,?)
2025-08-12 10:27:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:27:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:27:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0 
    where
        h1_0.id=?
2025-08-12 10:27:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        HouseRenter x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            house_renters h1_0 
        where
            h1_0.id=?
2025-08-12 10:27:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.id=?
2025-08-12 10:27:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.HouseRenter */insert 
    into
        house_renters (address,approved_date,created_at,national_id,proof_of_ownership_url,updated_at,user_id) 
    values
        (?,?,?,?,?,?,?)
2025-08-12 10:27:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.HouseRenterRequest */update house_renter_requests 
    set
        processed_date=?,
        reason=?,
        request_date=?,
        status=?,
        user_id=? 
    where
        id=?
2025-08-12 10:27:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:27:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:27:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:28:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:28:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:28:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:28:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:28:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:28:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:28:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:28:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        house_renters h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:28:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:28:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        house_renter_requests h1_0
2025-08-12 10:28:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:28:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        house_renters h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 10:30:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 10:30:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 10:30:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 10:54:42 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 25316 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 10:54:42 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 10:54:42 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 10:54:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 10:54:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 10 JPA repository interfaces.
2025-08-12 10:54:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 10:54:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 10:54:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 10:54:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 10:54:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4395 ms
2025-08-12 10:54:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 10:54:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 10:54:47 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 10:54:48 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 10:54:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 10:54:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 10:54:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c64339f
2025-08-12 10:54:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 10:54:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 10:54:50 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 10:54:52 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 10:54:52 [main] DEBUG org.hibernate.SQL - 
    create table host_requests (
        id bigint not null auto_increment,
        processed_date datetime(6),
        reason varchar(255),
        request_date datetime(6),
        status enum ('APPROVED','PENDING','REJECTED') not null,
        user_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-08-12 10:54:52 [main] DEBUG org.hibernate.SQL - 
    create table hosts (
        id bigint not null auto_increment,
        created_at datetime(6),
        updated_at datetime(6),
        address varchar(255),
        approved_date datetime(6),
        national_id varchar(255),
        proof_of_ownership_url varchar(255),
        user_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-08-12 10:54:52 [main] DEBUG org.hibernate.SQL - 
    alter table houses 
       add column host_id bigint not null
2025-08-12 10:54:53 [main] DEBUG org.hibernate.SQL - 
    alter table host_requests 
       drop index UK_s312eokm2s158d3r2iy0ayh0g
2025-08-12 10:54:53 [main] DEBUG org.hibernate.SQL - 
    alter table host_requests 
       add constraint UK_s312eokm2s158d3r2iy0ayh0g unique (user_id)
2025-08-12 10:54:53 [main] DEBUG org.hibernate.SQL - 
    alter table hosts 
       drop index UK_6c4mwr0x8hgg1dxv4b36slmfm
2025-08-12 10:54:53 [main] DEBUG org.hibernate.SQL - 
    alter table hosts 
       add constraint UK_6c4mwr0x8hgg1dxv4b36slmfm unique (user_id)
2025-08-12 10:54:53 [main] DEBUG org.hibernate.SQL - 
    alter table host_requests 
       add constraint FKi5dmjqaj9repuc3wb86ich6u1 
       foreign key (user_id) 
       references users (id)
2025-08-12 10:54:54 [main] DEBUG org.hibernate.SQL - 
    alter table hosts 
       add constraint FKim6h7w6syp1n0vvcrycxggs6x 
       foreign key (user_id) 
       references users (id)
2025-08-12 10:54:54 [main] DEBUG org.hibernate.SQL - 
    alter table houses 
       add constraint FKdqqr9usj738qnfxou5vtcm9pb 
       foreign key (host_id) 
       references users (id)
2025-08-12 10:54:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 10:54:58 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 10:54:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 10:55:00 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 10:55:01 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@26be5ee, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6845dfcc, org.springframework.security.web.context.SecurityContextHolderFilter@6ae729fb, org.springframework.security.web.header.HeaderWriterFilter@4817bd3, org.springframework.web.filter.CorsFilter@5415ed48, org.springframework.security.web.authentication.logout.LogoutFilter@7c7caff1, com.codegym.infrastructure.JwtTokenFilter@69542112, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22351330, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7414167a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@636787fd, org.springframework.security.web.session.SessionManagementFilter@39badc71, org.springframework.security.web.access.ExceptionTranslationFilter@40a923e6, org.springframework.security.web.access.intercept.AuthorizationFilter@4df4f611]
2025-08-12 10:55:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 10:55:02 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 21.257 seconds (process running for 23.441)
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:55:02 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:23 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 10:57:23 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 10:57:23 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 204 ms
2025-08-12 10:57:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:57:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:22 [http-nio-8080-exec-1] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro.jpg -> http://localhost:8080/api/files/proof-of-ownership/b61cbac0-2e64-4097-9633-bbb5c1c6f240.jpg
2025-08-12 10:58:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 10:58:22 [http-nio-8080-exec-3] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro2.jpg -> http://localhost:8080/api/files/proof-of-ownership/21471fe8-993e-4f58-a7ab-8dc1eea73073.jpg
2025-08-12 10:58:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 10:58:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 10:58:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:29 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:10:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:10:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:10:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro.jpg -> http://localhost:8080/api/files/proof-of-ownership/086c544a-99c3-4d98-b8ab-ffc7dbc6d24b.jpg
2025-08-12 11:11:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:43 [http-nio-8080-exec-4] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro2.jpg -> http://localhost:8080/api/files/proof-of-ownership/5e163e0d-c3b0-4322-b266-0a61e410e5d8.jpg
2025-08-12 11:11:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 11:11:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Host x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            hosts h1_0 
        where
            h1_0.id=?
2025-08-12 11:11:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id 
    from
        host_requests h1_0 
    where
        h1_0.user_id=? 
        and h1_0.status=? limit ?
2025-08-12 11:11:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.HostRequest */insert 
    into
        host_requests (processed_date,reason,request_date,status,user_id) 
    values
        (?,?,?,?,?)
2025-08-12 11:11:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro.jpg -> http://localhost:8080/api/files/proof-of-ownership/87f74a4c-2bc8-458d-a19f-aef2a3828173.jpg
2025-08-12 11:11:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:11:59 [http-nio-8080-exec-3] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: zoro2.jpg -> http://localhost:8080/api/files/proof-of-ownership/eb3ecd2d-69b4-4bdd-a681-0dd67300dd60.jpg
2025-08-12 11:11:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:11:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:11:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 11:12:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Host x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            hosts h1_0 
        where
            h1_0.id=?
2025-08-12 11:12:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id 
    from
        host_requests h1_0 
    where
        h1_0.user_id=? 
        and h1_0.status=? limit ?
2025-08-12 11:12:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:12:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:12:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:12:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:14:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:15:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:15:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:15:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:15:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:15:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:15:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:19:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:19:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:19:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:19:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:19:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:19:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:19:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:19:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:19:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:21:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:21:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:21:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:21:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:21:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:21:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:21:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:21:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:21:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:21:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:21:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:21:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:22:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:22:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:22:34 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:28:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 11:28:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 11:28:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 11:28:28 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 16456 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 11:28:28 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 11:28:28 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 11:28:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 11:28:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 10 JPA repository interfaces.
2025-08-12 11:28:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 11:28:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 11:28:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 11:28:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 11:28:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4624 ms
2025-08-12 11:28:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 11:28:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 11:28:34 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 11:28:34 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 11:28:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 11:28:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 11:28:39 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@768f4b42
2025-08-12 11:28:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 11:28:39 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 11:28:40 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 11:28:42 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 11:28:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 11:28:43 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 11:28:43 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 11:28:45 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 11:28:46 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3aef4650, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25eadfe6, org.springframework.security.web.context.SecurityContextHolderFilter@28e9f6b8, org.springframework.security.web.header.HeaderWriterFilter@162bc9e8, org.springframework.web.filter.CorsFilter@3ac23fe7, org.springframework.security.web.authentication.logout.LogoutFilter@6740b169, com.codegym.infrastructure.JwtTokenFilter@63e81ac6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d4f35cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34672fb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a8b10dd, org.springframework.security.web.session.SessionManagementFilter@7d24bd80, org.springframework.security.web.access.ExceptionTranslationFilter@331d651b, org.springframework.security.web.access.intercept.AuthorizationFilter@70fdecff]
2025-08-12 11:28:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 11:28:46 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 19.393 seconds (process running for 21.083)
2025-08-12 11:28:46 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 11:28:46 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 11:28:46 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 11:28:46 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 11:28:46 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 11:28:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 11:28:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 11:28:47 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:28:47 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:29:16 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 11:29:16 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 11:29:16 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-08-12 11:29:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:29:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:29:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:29:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:29:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:29:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:29:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:29:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:29:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:34:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:34:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:34:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 11:38:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 11:38:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 11:38:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 11:38:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:38:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 11:38:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 11:38:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 11:43:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 11:43:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 11:43:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 12:26:22 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 13052 (D:\Module-6\rental-house-backend\target\classes started by Hoang Tran in D:\Module-6\rental-house-backend)
2025-08-12 12:26:22 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 12:26:22 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 12:26:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 12:26:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 193 ms. Found 10 JPA repository interfaces.
2025-08-12 12:26:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 12:26:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 12:26:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 12:26:27 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 12:26:27 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5162 ms
2025-08-12 12:26:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 12:26:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 12:26:28 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 12:26:28 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 12:26:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 12:26:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 12:26:30 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30358dc7
2025-08-12 12:26:30 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 12:26:30 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 12:26:31 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 12:26:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 12:26:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 12:26:34 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 12:26:34 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 12:26:35 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 12:26:37 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@51e513b7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@87affb5, org.springframework.security.web.context.SecurityContextHolderFilter@4f4c3934, org.springframework.security.web.header.HeaderWriterFilter@27ae8ce3, org.springframework.web.filter.CorsFilter@1c461b90, org.springframework.security.web.authentication.logout.LogoutFilter@438f205c, com.codegym.infrastructure.JwtTokenFilter@6f70015, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2954be42, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29a73056, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@518e6d6c, org.springframework.security.web.session.SessionManagementFilter@2c34c819, org.springframework.security.web.access.ExceptionTranslationFilter@23001753, org.springframework.security.web.access.intercept.AuthorizationFilter@6bc6400e]
2025-08-12 12:26:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 12:26:38 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 17.831 seconds (process running for 30.361)
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:26:39 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:18 [http-nio-8080-exec-5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 12:27:18 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 12:27:18 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-12 12:27:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 12:27:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 12:27:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Host x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            hosts h1_0 
        where
            h1_0.id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.Host */insert 
    into
        hosts (address,approved_date,created_at,national_id,proof_of_ownership_url,updated_at,user_id) 
    values
        (?,?,?,?,?,?,?)
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.HostRequest */update host_requests 
    set
        processed_date=?,
        reason=?,
        request_date=?,
        status=?,
        user_id=? 
    where
        id=?
2025-08-12 12:27:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 12:27:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 12:27:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0
2025-08-12 12:27:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 12:27:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 12:27:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 12:27:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 12:27:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0
2025-08-12 12:27:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 12:28:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 12:28:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 12:28:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 13:50:42 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 64414 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 13:50:42 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 13:50:42 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 13:50:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 13:50:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 10 JPA repository interfaces.
2025-08-12 13:50:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 13:50:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 13:50:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 13:50:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 13:50:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 736 ms
2025-08-12 13:50:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 13:50:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 13:50:42 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 13:50:42 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 13:50:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 13:50:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 13:50:44 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:231)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:199)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:169)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 13:50:44 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:231)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:199)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:169)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 13:50:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 13:50:44 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 13:50:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 13:50:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 13:50:45 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:284)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 13:50:45 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1045, SQLState: 28000
2025-08-12 13:50:45 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Access denied for user 'root'@'localhost' (using password: YES)
2025-08-12 13:50:45 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
2025-08-12 13:50:45 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtTokenFilter' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/infrastructure/JwtTokenFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityConfig' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-08-12 13:50:45 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 13:50:45 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-12 13:50:45 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 13:50:45 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtTokenFilter' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/infrastructure/JwtTokenFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityConfig' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 77 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 91 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 103 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 110 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:61)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:284)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 135 common frames omitted
2025-08-12 13:52:41 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 64632 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 13:52:41 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 13:52:41 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 13:52:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 13:52:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 10 JPA repository interfaces.
2025-08-12 13:52:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 13:52:41 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 13:52:41 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 13:52:41 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 13:52:41 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 679 ms
2025-08-12 13:52:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 13:52:41 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 13:52:41 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 13:52:41 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 13:52:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 13:52:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 13:52:43 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:231)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:199)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:169)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 13:52:43 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:152)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:231)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:199)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:169)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 13:52:43 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 13:52:43 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 13:52:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 13:52:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 13:52:44 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:284)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
2025-08-12 13:52:44 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1045, SQLState: 28000
2025-08-12 13:52:44 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Access denied for user 'root'@'localhost' (using password: YES)
2025-08-12 13:52:44 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
2025-08-12 13:52:44 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtTokenFilter' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/infrastructure/JwtTokenFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityConfig' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-08-12 13:52:44 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 13:52:44 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-12 13:52:44 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 13:52:44 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:602)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.codegym.RentalHouseApplication.main(RentalHouseApplication.java:10)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:489)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:183)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:161)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtTokenFilter' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/infrastructure/JwtTokenFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'securityConfig' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:846)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:241)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:918)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:485)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes/com/codegym/config/SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 54 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository' defined in com.codegym.repository.UserRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1682)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 77 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:688)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:512)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 91 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 103 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 110 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution [Access denied for user 'root'@'localhost' (using password: YES)] [n/a]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:61)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:284)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:143)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:140)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:293)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:316)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 135 common frames omitted
2025-08-12 13:53:15 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 64652 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 13:53:15 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 13:53:15 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 13:53:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 13:53:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 10 JPA repository interfaces.
2025-08-12 13:53:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 13:53:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 13:53:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 13:53:16 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 13:53:16 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 731 ms
2025-08-12 13:53:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 13:53:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 13:53:16 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 13:53:16 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 13:53:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 13:53:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 13:53:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5ddb302
2025-08-12 13:53:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 13:53:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 13:53:16 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 13:53:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    create table host_requests (
        id bigint not null auto_increment,
        processed_date datetime(6),
        reason varchar(255),
        request_date datetime(6),
        status enum ('APPROVED','PENDING','REJECTED') not null,
        user_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    create table hosts (
        id bigint not null auto_increment,
        created_at datetime(6),
        updated_at datetime(6),
        address varchar(255),
        approved_date datetime(6),
        national_id varchar(255),
        proof_of_ownership_url varchar(255),
        user_id bigint not null,
        primary key (id)
    ) engine=InnoDB
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table houses 
       add column host_id bigint not null
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table host_requests 
       drop index UK_s312eokm2s158d3r2iy0ayh0g
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table host_requests 
       add constraint UK_s312eokm2s158d3r2iy0ayh0g unique (user_id)
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table hosts 
       drop index UK_6c4mwr0x8hgg1dxv4b36slmfm
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table hosts 
       add constraint UK_6c4mwr0x8hgg1dxv4b36slmfm unique (user_id)
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table host_requests 
       add constraint FKi5dmjqaj9repuc3wb86ich6u1 
       foreign key (user_id) 
       references users (id)
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table hosts 
       add constraint FKim6h7w6syp1n0vvcrycxggs6x 
       foreign key (user_id) 
       references users (id)
2025-08-12 13:53:17 [main] DEBUG org.hibernate.SQL - 
    alter table houses 
       add constraint FKdqqr9usj738qnfxou5vtcm9pb 
       foreign key (host_id) 
       references users (id)
2025-08-12 13:53:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 13:53:17 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 13:53:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 13:53:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 13:53:18 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@8dbe78f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@735a3e0d, org.springframework.security.web.context.SecurityContextHolderFilter@251e00a0, org.springframework.security.web.header.HeaderWriterFilter@510ee215, org.springframework.web.filter.CorsFilter@17ed6578, org.springframework.security.web.authentication.logout.LogoutFilter@4c00c8ce, com.codegym.infrastructure.JwtTokenFilter@5e0b7f58, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40c31127, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@331d651b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@351623d, org.springframework.security.web.session.SessionManagementFilter@6ccb3dd, org.springframework.security.web.access.ExceptionTranslationFilter@5decbb5f, org.springframework.security.web.access.intercept.AuthorizationFilter@42ffabb]
2025-08-12 13:53:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 13:53:18 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.07 seconds (process running for 3.365)
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 13:53:18 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:13:07 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 14:13:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 14:13:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-12 14:13:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:13:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:13:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:13:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:13:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:13:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:13:14 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:13:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 14:13:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 14:13:16 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 66949 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 14:13:16 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 14:13:16 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 14:13:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 14:13:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39 ms. Found 10 JPA repository interfaces.
2025-08-12 14:13:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 14:13:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 14:13:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 14:13:16 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 14:13:16 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 727 ms
2025-08-12 14:13:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 14:13:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 14:13:16 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 14:13:16 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:13:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 14:13:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 14:13:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@23df7fad
2025-08-12 14:13:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 14:13:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 14:13:17 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:13:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 14:13:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:13:17 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 14:13:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 14:13:18 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 14:13:18 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7ec02149, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2afdab87, org.springframework.security.web.context.SecurityContextHolderFilter@7e6bfd2, org.springframework.security.web.header.HeaderWriterFilter@76b93bb9, org.springframework.web.filter.CorsFilter@70903e7b, org.springframework.security.web.authentication.logout.LogoutFilter@3396d2a6, com.codegym.infrastructure.JwtTokenFilter@7c4de811, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@490f4b14, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@768dcd21, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e9f3d0f, org.springframework.security.web.session.SessionManagementFilter@6291d30, org.springframework.security.web.access.ExceptionTranslationFilter@1752ab9b, org.springframework.security.web.access.intercept.AuthorizationFilter@58a2c6a]
2025-08-12 14:13:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 14:13:18 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.772 seconds (process running for 3.089)
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:13:18 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:13:41 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:13:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 14:13:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 14:13:42 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 66965 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 14:13:42 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 14:13:42 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 14:13:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 14:13:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 10 JPA repository interfaces.
2025-08-12 14:13:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 14:13:43 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 14:13:43 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 14:13:43 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 14:13:43 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 662 ms
2025-08-12 14:13:43 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 14:13:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 14:13:43 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 14:13:43 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:13:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 14:13:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 14:13:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@523abba9
2025-08-12 14:13:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 14:13:43 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 14:13:44 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:13:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 14:13:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:13:44 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 14:13:44 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 14:13:45 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 14:13:45 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@77070012, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39ad1fdb, org.springframework.security.web.context.SecurityContextHolderFilter@23327c53, org.springframework.security.web.header.HeaderWriterFilter@681f5a1e, org.springframework.web.filter.CorsFilter@7321f698, org.springframework.security.web.authentication.logout.LogoutFilter@28e9f6b8, com.codegym.infrastructure.JwtTokenFilter@1a67bcaf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@260f8704, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70903e7b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22e470f4, org.springframework.security.web.session.SessionManagementFilter@510ee215, org.springframework.security.web.access.ExceptionTranslationFilter@7fd4682, org.springframework.security.web.access.intercept.AuthorizationFilter@3ace955c]
2025-08-12 14:13:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 14:13:45 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.636 seconds (process running for 2.944)
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:13:45 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:14:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 14:14:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 14:14:07 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 66977 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 14:14:07 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 14:14:07 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 14:14:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 14:14:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 10 JPA repository interfaces.
2025-08-12 14:14:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 14:14:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 14:14:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 14:14:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 14:14:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 679 ms
2025-08-12 14:14:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 14:14:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 14:14:08 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 14:14:08 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:14:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 14:14:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 14:14:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7ac685ef
2025-08-12 14:14:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 14:14:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 14:14:08 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:14:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 14:14:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:14:09 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 14:14:09 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 14:14:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 14:14:09 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3e9f3d0f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41aa99fc, org.springframework.security.web.context.SecurityContextHolderFilter@7931cea2, org.springframework.security.web.header.HeaderWriterFilter@32daccab, org.springframework.web.filter.CorsFilter@6ccb3dd, org.springframework.security.web.authentication.logout.LogoutFilter@679864e0, com.codegym.infrastructure.JwtTokenFilter@d98ce13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45e97963, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bae8e5e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@775e3699, org.springframework.security.web.session.SessionManagementFilter@7e6bfd2, org.springframework.security.web.access.ExceptionTranslationFilter@398f6f04, org.springframework.security.web.access.intercept.AuthorizationFilter@7ec02149]
2025-08-12 14:14:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 14:14:09 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.793 seconds (process running for 3.069)
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:10 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:11 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 14:14:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 14:14:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 14:14:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:14:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:14:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:14:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:14:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:14:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:14:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:14:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:14:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:16:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0
2025-08-12 14:16:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0
2025-08-12 14:16:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:16:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:16:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:16:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:16:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:24 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:19:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:19:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 14:19:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 14:19:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:19:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:19:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:19:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 14:19:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 14:20:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 14:20:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 14:20:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 14:20:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 14:20:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 14:20:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:20:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 14:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 14:30:57 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:30:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 14:30:57 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 14:31:21 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 67497 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 14:31:21 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 14:31:21 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 14:31:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 14:31:22 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2025-08-12 14:31:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 14:31:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 14:31:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 14:31:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 14:31:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 746 ms
2025-08-12 14:31:22 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 14:31:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 14:31:22 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 14:31:22 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:31:22 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 14:31:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 14:31:23 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6697f3d
2025-08-12 14:31:23 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 14:31:23 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 14:31:23 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 14:31:23 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 14:31:23 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 14:31:24 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 14:31:24 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 14:31:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 14:31:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d81bc79, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c9dcfcd, org.springframework.security.web.context.SecurityContextHolderFilter@7a6ef10b, org.springframework.security.web.header.HeaderWriterFilter@7931cea2, org.springframework.web.filter.CorsFilter@4431233f, org.springframework.security.web.authentication.logout.LogoutFilter@41aa99fc, com.codegym.infrastructure.JwtTokenFilter@1d86b636, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c35b83c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5cb9ef8a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@201ac0ef, org.springframework.security.web.session.SessionManagementFilter@65b869b4, org.springframework.security.web.access.ExceptionTranslationFilter@49e8f283, org.springframework.security.web.access.intercept.AuthorizationFilter@54a0ada1]
2025-08-12 14:31:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 14:31:24 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.01 seconds (process running for 3.268)
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:31:24 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:02 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 14:34:02 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 14:34:02 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-12 14:34:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:03 [http-nio-8080-exec-3] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:03 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:03 [http-nio-8080-exec-4] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:03 [http-nio-8080-exec-7] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:03 [http-nio-8080-exec-8] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:05 [http-nio-8080-exec-9] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:05 [http-nio-8080-exec-10] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:06 [http-nio-8080-exec-6] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:34:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:34:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:34:06 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:34:06 [http-nio-8080-exec-5] WARN  o.s.web.servlet.PageNotFound - Request method 'GET' is not supported
2025-08-12 14:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:42:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:42:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:42:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:42:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:42:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:42:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:42:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:42:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:42:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:42:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:42:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:42:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:42:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:42:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:42:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:42:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:42:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:43:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:43:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:43:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:43:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:43:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:43:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:43:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:43:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:43:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:43:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:43:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:45:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:45:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:45:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:46:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:46:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:46:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:46:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:46:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:46:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:46:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:46:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:46:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:46:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:46:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:46:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:46:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:46:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:46:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:46:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:47:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:47:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:47:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:47:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:47:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:47:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:47:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:47:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:47:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:47:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:47:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:47:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:47:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:47:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:47:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:47:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:48:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:48:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:48:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:48:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:48:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:48:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:48:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:48:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:39 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:52:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:43 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:52:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:52:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:52:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:52:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:53:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:53:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:53:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:53:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:53:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:53:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:53:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:53:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:53:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:54:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:54:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:54:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:54:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:54:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:54:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:54:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:54:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:54:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:59:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 14:59:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:16 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 14:59:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 14:59:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 14:59:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 14:59:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:00:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:00:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:00:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:00:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:01:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:01:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:01:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:01:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:01:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:03:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:03:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:03:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:03:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:03:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:03:51 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:03:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:03:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:03:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:03:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:03:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:03:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:03:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:03:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:03:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:03:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:05:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:05:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:05:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:05:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:05:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:05:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:05:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:05:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:05:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:05:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:05:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:05:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:05:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:05:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:05:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:05:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:06:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:06:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:06:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:06:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:06:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:06:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:06:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:06:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:06:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:07:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:35 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:36 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:07:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:07:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 15:07:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:46 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:07:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 15:07:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 15:07:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 15:07:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 15:09:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 15:09:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 15:09:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 16:17:18 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 85733 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 16:17:18 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 16:17:18 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 16:17:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 16:17:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 10 JPA repository interfaces.
2025-08-12 16:17:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 16:17:19 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 16:17:19 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 16:17:19 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 16:17:19 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 726 ms
2025-08-12 16:17:19 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 16:17:19 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 16:17:19 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 16:17:19 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 16:17:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 16:17:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 16:17:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51743cc0
2025-08-12 16:17:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 16:17:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 16:17:19 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 16:17:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 16:17:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:17:20 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 16:17:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 16:17:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 16:17:21 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4431233f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@201ac0ef, org.springframework.security.web.context.SecurityContextHolderFilter@c35b83c, org.springframework.security.web.header.HeaderWriterFilter@45e97963, org.springframework.web.filter.CorsFilter@70a8d2e1, org.springframework.security.web.authentication.logout.LogoutFilter@775e3699, com.codegym.infrastructure.JwtTokenFilter@38eafdab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f72e38c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@bba6542, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12a9889e, org.springframework.security.web.session.SessionManagementFilter@171b3f38, org.springframework.security.web.access.ExceptionTranslationFilter@7931cea2, org.springframework.security.web.access.intercept.AuthorizationFilter@5ec2462]
2025-08-12 16:17:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 16:17:21 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.05 seconds (process running for 3.284)
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:17:21 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:18:57 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 16:18:57 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 16:18:57 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-12 16:18:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:18:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:18:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:19:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 16:19:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:05 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 16:19:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:19:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:07 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:19:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:19:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:19:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:19:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:32:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:32:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:32:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:32:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:32:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 16:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:32:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 16:32:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:32:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:32:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:32:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:32:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 16:32:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:32:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:32:21 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:32:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:32:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 16:32:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:32:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:32:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:32:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:32:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:35:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:35:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:35:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:35:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 16:41:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:41:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:41:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:41:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:41:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:41:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 16:41:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 16:41:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:41:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:41:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:41:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:41:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 16:41:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 16:42:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 16:42:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:42:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 16:42:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 16:42:05 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 16:42:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? limit ?
2025-08-12 17:03:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone=? limit ?
2025-08-12 17:03:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:03:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.User */insert 
    into
        users (active,address,img,birth_date,created_at,email,facebook_account_id,full_name,google_account_id,password,phone,role_id,updated_at,username) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-12 17:03:00 [http-nio-8080-exec-9] INFO  com.codegym.service.AuthService - New user registered: trung@gmail.com
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:03:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:03:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:03:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:03:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:03:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:03:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:03:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:03:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-8] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-12 lúc 15.44.44.png -> http://localhost:8080/api/files/national-id/b1efcb34-9ddd-41ca-b8ad-4910f216e04f.png
2025-08-12 17:04:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-1] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-12 lúc 14.32.34.png -> http://localhost:8080/api/files/national-id/974476bb-6f65-401a-9033-8f3a0ce938ae.png
2025-08-12 17:04:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-4] INFO  c.c.s.impl.FileUploadServiceImpl - File uploaded successfully: Ảnh màn hình 2025-08-12 lúc 15.55.22.png -> http://localhost:8080/api/files/proof-of-ownership/0fcab500-e0d4-4f73-a694-8e0b05fa697b.png
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Host x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            hosts h1_0 
        where
            h1_0.id=?
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id 
    from
        host_requests h1_0 
    where
        h1_0.user_id=? 
        and h1_0.status=? limit ?
2025-08-12 17:04:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.HostRequest */insert 
    into
        host_requests (processed_date,reason,request_date,status,user_id) 
    values
        (?,?,?,?,?)
2025-08-12 17:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:04:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:04:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Host x 
    WHERE
        x.id = :id */ select
            count(*) 
        from
            hosts h1_0 
        where
            h1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.codegym.entity.Host */insert 
    into
        hosts (address,approved_date,created_at,national_id,proof_of_ownership_url,updated_at,user_id) 
    values
        (?,?,?,?,?,?,?)
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.HostRequest */update host_requests 
    set
        processed_date=?,
        reason=?,
        request_date=?,
        status=?,
        user_id=? 
    where
        id=?
2025-08-12 17:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 17:04:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:04:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:04:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 17:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 17:05:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 17:05:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 17:05:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:05:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:24 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:25 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:05:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:05:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:05:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:05:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:05:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name!=? 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:22 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 17:10:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 17:12:32 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:12:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:12:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:12:33 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 86661 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 17:12:33 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 17:12:33 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:12:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:12:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 10 JPA repository interfaces.
2025-08-12 17:12:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 17:12:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:12:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 17:12:34 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:12:34 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 728 ms
2025-08-12 17:12:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:12:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 17:12:34 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 17:12:34 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 17:12:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:12:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:12:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51743cc0
2025-08-12 17:12:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:12:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 17:12:34 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 17:12:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 17:12:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:12:35 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 17:12:35 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:12:36 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:12:36 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@c9dcfcd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4431233f, org.springframework.security.web.context.SecurityContextHolderFilter@5cbdc23b, org.springframework.security.web.header.HeaderWriterFilter@4b9be679, org.springframework.web.filter.CorsFilter@201ac0ef, org.springframework.security.web.authentication.logout.LogoutFilter@6ccb3dd, com.codegym.infrastructure.JwtTokenFilter@373c8f35, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4299b47d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@538c823c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a8d2e1, org.springframework.security.web.session.SessionManagementFilter@7f55e1b9, org.springframework.security.web.access.ExceptionTranslationFilter@490f4b14, org.springframework.security.web.access.intercept.AuthorizationFilter@162bc9e8]
2025-08-12 17:12:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 17:12:36 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.877 seconds (process running for 3.133)
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 17:12:36 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 17:14:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:14:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:14:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 20:55:23 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 87105 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 20:55:23 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 20:55:23 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 20:55:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 20:55:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2025-08-12 20:55:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 20:55:24 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 20:55:24 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 20:55:24 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 20:55:24 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 769 ms
2025-08-12 20:55:24 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 20:55:24 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 20:55:24 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 20:55:24 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 20:55:24 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 20:55:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 20:55:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@f49e81a
2025-08-12 20:55:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 20:55:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 20:55:25 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 20:55:25 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 20:55:25 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 20:55:25 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 20:55:25 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 20:55:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 20:55:26 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2afdab87, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70903e7b, org.springframework.security.web.context.SecurityContextHolderFilter@49e8f283, org.springframework.security.web.header.HeaderWriterFilter@398f6f04, org.springframework.web.filter.CorsFilter@3e9f3d0f, org.springframework.security.web.authentication.logout.LogoutFilter@1ed43328, com.codegym.infrastructure.JwtTokenFilter@3507200d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7931cea2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1be598c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41aa99fc, org.springframework.security.web.session.SessionManagementFilter@4518bffd, org.springframework.security.web.access.ExceptionTranslationFilter@b205e08, org.springframework.security.web.access.intercept.AuthorizationFilter@260f8704]
2025-08-12 20:55:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 20:55:26 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.02 seconds (process running for 3.301)
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:26 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:32 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 20:55:32 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 20:55:32 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 20:55:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:55:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 20:55:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:55:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:55:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 20:55:32 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:34 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:55:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 20:55:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:55:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:55:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:55:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:55:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 20:55:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:57:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 20:57:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 20:57:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 20:57:45 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 87332 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 20:57:45 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 20:57:45 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 20:57:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 20:57:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 10 JPA repository interfaces.
2025-08-12 20:57:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 20:57:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 20:57:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 20:57:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 20:57:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 702 ms
2025-08-12 20:57:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 20:57:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 20:57:46 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 20:57:46 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 20:57:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 20:57:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 20:57:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e85e3f1
2025-08-12 20:57:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 20:57:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 20:57:46 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 20:57:46 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 20:57:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 20:57:47 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 20:57:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 20:57:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 20:57:47 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@787f97b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37e682da, org.springframework.security.web.context.SecurityContextHolderFilter@5decbb5f, org.springframework.security.web.header.HeaderWriterFilter@538c823c, org.springframework.web.filter.CorsFilter@3ace955c, org.springframework.security.web.authentication.logout.LogoutFilter@1fae279e, com.codegym.infrastructure.JwtTokenFilter@3816efab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@510ee215, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58a2c6a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c00c8ce, org.springframework.security.web.session.SessionManagementFilter@23216e17, org.springframework.security.web.access.ExceptionTranslationFilter@7d6c4c43, org.springframework.security.web.access.intercept.AuthorizationFilter@34672fb]
2025-08-12 20:57:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 20:57:47 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.798 seconds (process running for 3.036)
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:47 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:48 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 20:57:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 20:57:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-08-12 20:57:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:57:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:48 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 20:57:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:57:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 20:57:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 20:57:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 20:57:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 20:57:53 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 87346 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 20:57:53 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 20:57:53 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 20:57:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 20:57:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 10 JPA repository interfaces.
2025-08-12 20:57:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 20:57:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 20:57:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 20:57:53 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 20:57:53 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 678 ms
2025-08-12 20:57:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 20:57:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 20:57:53 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 20:57:53 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 20:57:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 20:57:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 20:57:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f581211
2025-08-12 20:57:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 20:57:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 20:57:54 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 20:57:54 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 20:57:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 20:57:54 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 20:57:54 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 20:57:55 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 20:57:55 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ec2462, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d81bc79, org.springframework.security.web.context.SecurityContextHolderFilter@171b3f38, org.springframework.security.web.header.HeaderWriterFilter@490f4b14, org.springframework.web.filter.CorsFilter@c9dcfcd, org.springframework.security.web.authentication.logout.LogoutFilter@3e9f3d0f, com.codegym.infrastructure.JwtTokenFilter@1d86b636, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5cbdc23b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d6c4c43, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4431233f, org.springframework.security.web.session.SessionManagementFilter@abce494, org.springframework.security.web.access.ExceptionTranslationFilter@7e6bfd2, org.springframework.security.web.access.intercept.AuthorizationFilter@331d651b]
2025-08-12 20:57:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 20:57:55 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.788 seconds (process running for 3.032)
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:55 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:57 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 20:57:57 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 20:57:57 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-08-12 20:57:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:57:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 20:57:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:57:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:58:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:58:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:58:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:58:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:58:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 20:58:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:58:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:58:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:58:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 20:58:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:58:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:58:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:58:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:58:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 20:58:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 20:58:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 20:58:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 20:58:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 20:58:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:05:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:06:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:06:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:06:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:06:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:06:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:06:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:06:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:06:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:06:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:06:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:06:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:06:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:06:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:06:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:06:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:06:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:06:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:06:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:06:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:07:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:07:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:07:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:07:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:07:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:07:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:07:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:07:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:07:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:08:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:08:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:08:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:08:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:08:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:08:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:08:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:08:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:08:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:09:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:09:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:09:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:09:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:09:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:09:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:09:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:13:44 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:13:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 21:13:44 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 21:13:46 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 87670 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 21:13:46 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 21:13:46 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 21:13:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 21:13:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 10 JPA repository interfaces.
2025-08-12 21:13:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 21:13:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 21:13:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 21:13:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 21:13:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 729 ms
2025-08-12 21:13:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 21:13:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 21:13:47 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 21:13:47 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:13:47 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 21:13:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 21:13:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@793d09e
2025-08-12 21:13:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 21:13:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 21:13:47 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:13:48 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 21:13:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:13:48 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 21:13:48 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 21:13:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 21:13:48 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7474bc14, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77070012, org.springframework.security.web.context.SecurityContextHolderFilter@7fc2e0b7, org.springframework.security.web.header.HeaderWriterFilter@3057a923, org.springframework.web.filter.CorsFilter@39ad1fdb, org.springframework.security.web.authentication.logout.LogoutFilter@4d4ae76, com.codegym.infrastructure.JwtTokenFilter@5aa461, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58a2c6a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2afdab87, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7321f698, org.springframework.security.web.session.SessionManagementFilter@75952723, org.springframework.security.web.access.ExceptionTranslationFilter@14ab3e22, org.springframework.security.web.access.intercept.AuthorizationFilter@37e682da]
2025-08-12 21:13:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 21:13:49 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 3.058 seconds (process running for 3.322)
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:13:49 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:13:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 21:13:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 21:13:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 21:13:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:13:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:13:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:13:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:13:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:13:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:13:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:13:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:13:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:13:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:13:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:13:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:13:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:13:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:13:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:14:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:14:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:14:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:14:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:14:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:18:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:18:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:18:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:18:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:18:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:30 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 21:20:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 21:20:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 21:20:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:52 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:20:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 21:20:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 21:20:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.house_id,
        r1_0.renter_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_price,
        r1_0.updated_at 
    from
        rentals r1_0 
    where
        r1_0.renter_id=? 
    order by
        r1_0.start_date desc
2025-08-12 21:20:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        SUM(r.totalPrice) 
    FROM
        Rental r 
    WHERE
        r.renter.id = :renterId */ select
            sum(r1_0.total_price) 
        from
            rentals r1_0 
        where
            r1_0.renter_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 21:20:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:20:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:20:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:20:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:22:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:22:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:22:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:22:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:22:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:22:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:22:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:22:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:22:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:22:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:22:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:22:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:22:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:22:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:22:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:22:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:22:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:22:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:51 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:22:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:22:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:22:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:22:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:22:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:23:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:23:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 21:23:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 21:23:47 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 87867 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 21:23:47 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 21:23:47 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 21:23:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 21:23:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 10 JPA repository interfaces.
2025-08-12 21:23:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 21:23:48 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 21:23:48 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 21:23:48 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 21:23:48 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 719 ms
2025-08-12 21:23:48 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 21:23:48 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 21:23:48 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 21:23:48 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:23:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 21:23:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 21:23:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44ddb518
2025-08-12 21:23:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 21:23:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 21:23:49 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:23:49 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 21:23:49 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:23:49 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 21:23:49 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 21:23:50 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 21:23:50 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70798698, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d4f35cb, org.springframework.security.web.context.SecurityContextHolderFilter@48acb864, org.springframework.security.web.header.HeaderWriterFilter@171b3f38, org.springframework.web.filter.CorsFilter@7cc9970a, org.springframework.security.web.authentication.logout.LogoutFilter@5d81bc79, com.codegym.infrastructure.JwtTokenFilter@75708130, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57e273e0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@679864e0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1bf2e21d, org.springframework.security.web.session.SessionManagementFilter@3057a923, org.springframework.security.web.access.ExceptionTranslationFilter@65b869b4, org.springframework.security.web.access.intercept.AuthorizationFilter@6a28f67a]
2025-08-12 21:23:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 21:23:50 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.8 seconds (process running for 3.049)
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:50 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:53 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 21:23:53 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 21:23:53 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 21:23:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:23:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:23:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:23:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:23:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:23:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:23:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:24:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        r1_0.name not in (?,?) 
    order by
        u1_0.id desc limit ?,
        ?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:24:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:37:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 21:37:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 21:37:12 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 88088 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 21:37:12 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 21:37:12 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 21:37:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 21:37:13 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2025-08-12 21:37:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 21:37:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 21:37:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 21:37:13 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 21:37:13 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 672 ms
2025-08-12 21:37:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 21:37:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 21:37:13 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 21:37:13 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:37:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 21:37:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 21:37:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@793d09e
2025-08-12 21:37:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 21:37:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 21:37:14 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:37:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 21:37:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:37:14 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 21:37:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 21:37:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 21:37:15 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7474bc14, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77070012, org.springframework.security.web.context.SecurityContextHolderFilter@7fc2e0b7, org.springframework.security.web.header.HeaderWriterFilter@3057a923, org.springframework.web.filter.CorsFilter@39ad1fdb, org.springframework.security.web.authentication.logout.LogoutFilter@4d4ae76, com.codegym.infrastructure.JwtTokenFilter@5aa461, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58a2c6a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2afdab87, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7321f698, org.springframework.security.web.session.SessionManagementFilter@75952723, org.springframework.security.web.access.ExceptionTranslationFilter@14ab3e22, org.springframework.security.web.access.intercept.AuthorizationFilter@37e682da]
2025-08-12 21:37:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 21:37:15 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.748 seconds (process running for 2.984)
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:15 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 21:37:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 21:37:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-12 21:37:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:37:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:37:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:37:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:37:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:37:21 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:37:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:37:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:37:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:37:25 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:37:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:37:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:37:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:37:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:40:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:40:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 21:40:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 21:40:53 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 88170 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 21:40:53 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 21:40:53 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 21:40:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 21:40:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 10 JPA repository interfaces.
2025-08-12 21:40:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 21:40:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 21:40:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 21:40:54 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 21:40:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 668 ms
2025-08-12 21:40:54 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 21:40:54 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 21:40:54 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 21:40:54 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:40:54 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 21:40:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 21:40:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e85e3f1
2025-08-12 21:40:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 21:40:55 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 21:40:55 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:40:55 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 21:40:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:40:55 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 21:40:55 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 21:40:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 21:40:56 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@37e682da, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ace955c, org.springframework.security.web.context.SecurityContextHolderFilter@75952723, org.springframework.security.web.header.HeaderWriterFilter@bba6542, org.springframework.web.filter.CorsFilter@4c00c8ce, org.springframework.security.web.authentication.logout.LogoutFilter@411db18d, com.codegym.infrastructure.JwtTokenFilter@3816efab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@474c8d42, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@260f8704, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7474bc14, org.springframework.security.web.session.SessionManagementFilter@679864e0, org.springframework.security.web.access.ExceptionTranslationFilter@5cb9ef8a, org.springframework.security.web.access.intercept.AuthorizationFilter@3387d45e]
2025-08-12 21:40:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 21:40:56 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.781 seconds (process running for 3.012)
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:40:56 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:01 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 21:41:01 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 21:41:01 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 21:41:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 21:41:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.processed_date,
        h1_0.reason,
        h1_0.request_date,
        h1_0.status,
        h1_0.user_id 
    from
        host_requests h1_0 
    where
        h1_0.status=? limit ?,?
2025-08-12 21:41:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:41:02 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:41:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 limit ?,
        ?
2025-08-12 21:41:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:41:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:41:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:41:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:41:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:41:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:41:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:41:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:41:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:42:26 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:42:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 21:42:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 21:42:28 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 88231 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 21:42:28 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 21:42:28 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 21:42:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 21:42:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 10 JPA repository interfaces.
2025-08-12 21:42:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 21:42:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 21:42:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 21:42:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 21:42:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 660 ms
2025-08-12 21:42:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 21:42:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 21:42:28 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 21:42:29 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:42:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 21:42:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 21:42:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@195498aa
2025-08-12 21:42:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 21:42:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 21:42:29 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:42:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 21:42:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:42:30 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 21:42:30 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 21:42:30 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 21:42:30 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3ace955c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c00c8ce, org.springframework.security.web.context.SecurityContextHolderFilter@510ee215, org.springframework.security.web.header.HeaderWriterFilter@14ab3e22, org.springframework.web.filter.CorsFilter@7474bc14, org.springframework.security.web.authentication.logout.LogoutFilter@7d24bd80, com.codegym.infrastructure.JwtTokenFilter@2d6e09f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fc2e0b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ea01c2a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77070012, org.springframework.security.web.session.SessionManagementFilter@629e9957, org.springframework.security.web.access.ExceptionTranslationFilter@538c823c, org.springframework.security.web.access.intercept.AuthorizationFilter@3f693a39]
2025-08-12 21:42:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 21:42:30 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.649 seconds (process running for 2.875)
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:42:30 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:42:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 21:42:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 21:42:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 21:42:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:42:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:42:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:42:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:42:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:42:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:42:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:42:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:42:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:42:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:42:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:42:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:42:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:42:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:42:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:42:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:49:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:49:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 21:49:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 21:49:08 [main] INFO  com.codegym.RentalHouseApplication - Starting RentalHouseApplication using Java 17.0.15 with PID 88340 (/Users/hieult/Desktop/RentalHouse/rental-house-backend/target/classes started by hieult in /Users/hieult/Desktop/RentalHouse/rental-house-backend)
2025-08-12 21:49:08 [main] DEBUG com.codegym.RentalHouseApplication - Running with Spring Boot v3.1.4, Spring v6.0.12
2025-08-12 21:49:08 [main] INFO  com.codegym.RentalHouseApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 21:49:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 21:49:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 10 JPA repository interfaces.
2025-08-12 21:49:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-08-12 21:49:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 21:49:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.13]
2025-08-12 21:49:09 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 21:49:09 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 684 ms
2025-08-12 21:49:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 21:49:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.2.9.Final
2025-08-12 21:49:09 [main] INFO  org.hibernate.cfg.Environment - HHH000406: Using bytecode reflection optimizer
2025-08-12 21:49:09 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:49:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 21:49:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 21:49:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@ccd000e
2025-08-12 21:49:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 21:49:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-12 21:49:09 [main] INFO  o.h.b.i.BytecodeProviderInitiator - HHH000021: Bytecode provider name : bytebuddy
2025-08-12 21:49:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-08-12 21:49:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 21:49:10 [main] DEBUG c.c.infrastructure.JwtTokenFilter - Filter 'jwtTokenFilter' configured for use
2025-08-12 21:49:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 21:49:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 21:49:11 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@735a3e0d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17ed6578, org.springframework.security.web.context.SecurityContextHolderFilter@462f1d85, org.springframework.security.web.header.HeaderWriterFilter@474c8d42, org.springframework.web.filter.CorsFilter@351623d, org.springframework.security.web.authentication.logout.LogoutFilter@7474bc14, com.codegym.infrastructure.JwtTokenFilter@5643052d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bcecdd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54a0ada1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54610a47, org.springframework.security.web.session.SessionManagementFilter@775e3699, org.springframework.security.web.access.ExceptionTranslationFilter@75952723, org.springframework.security.web.access.intercept.AuthorizationFilter@7a63c618]
2025-08-12 21:49:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2025-08-12 21:49:11 [main] INFO  com.codegym.RentalHouseApplication - Started RentalHouseApplication in 2.828 seconds (process running for 3.059)
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:49:11 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:49:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 21:49:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 21:49:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-12 21:49:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:49:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:49:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:49:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.id=?
2025-08-12 21:49:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:49:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:49:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:49:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
2025-08-12 21:49:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.id=?
2025-08-12 21:49:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id,
        u1_0.password,
        u1_0.phone,
        r1_0.id,
        r1_0.name,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    left join
        hosts h1_0 
            on u1_0.id=h1_0.user_id 
    left join
        roles r1_0 
            on r1_0.id=u1_0.role_id 
    where
        u1_0.id=?
2025-08-12 21:49:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.codegym.entity.User */update users 
    set
        active=?,
        address=?,
        img=?,
        birth_date=?,
        email=?,
        facebook_account_id=?,
        full_name=?,
        google_account_id=?,
        password=?,
        phone=?,
        role_id=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-08-12 21:49:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.active,
        u1_0.address,
        u1_0.img,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.email,
        u1_0.facebook_account_id,
        u1_0.full_name,
        u1_0.google_account_id,
        u1_0.password,
        u1_0.phone,
        u1_0.role_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-12 21:49:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        h1_0.id,
        h1_0.address,
        h1_0.approved_date,
        h1_0.created_at,
        h1_0.national_id,
        h1_0.proof_of_ownership_url,
        h1_0.updated_at,
        h1_0.user_id 
    from
        hosts h1_0 
    where
        h1_0.user_id=?
2025-08-12 21:49:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.id=?
